name: Update Version on Main

on:
  push:
    branches:
      - '**'

permissions:
  contents: write
  pull-requests: write
 
jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if this is a version bump commit
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          if [[ "$COMMIT_MESSAGE" == *"bump version to"* ]]; then
            echo "This is a version bump commit, skipping workflow"
            exit 0
          fi

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Get current Maven version
        id: current_version
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Calculate next version
        id: next_version
        run: |
          CURRENT_VERSION="${{ steps.current_version.outputs.current_version }}"
          # Remove -SNAPSHOT suffix if present
          BASE_VERSION=${CURRENT_VERSION%-SNAPSHOT}
          
          # Split version into parts (assuming semantic versioning)
          IFS='.' read -ra VERSION_PARTS <<< "$BASE_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          # Increment patch version
          NEXT_PATCH=$((PATCH + 1))
          NEXT_VERSION="$MAJOR.$MINOR.$NEXT_PATCH-SNAPSHOT"
          
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT
          echo "Next version will be: $NEXT_VERSION"

      - name: Update Maven version
        run: |
          mvn versions:set -DnewVersion=${{ steps.next_version.outputs.next_version }}
          mvn versions:commit

      - name: Print pom.xml version
        run: |
          echo "Updated pom.xml version:"
          mvn help:evaluate -Dexpression=project.version -q -DforceStdout

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"     

      - name: Show current branch
        run: |
          git branch --show-current
          echo "Current branch: ${{ github.ref_name }}"

      - name: Create version update branch
        id: create_branch
        run: |          
          # Create and switch to new branch
          BRANCH_NAME="chore/bump-version-${{ steps.next_version.outputs.next_version }}"
          git checkout -b "$BRANCH_NAME"
          
          # Commit changes
          # git add pom.xml
          # git commit -m "chore: bump version to ${{ steps.next_version.outputs.next_version }}"
          # git push origin "$BRANCH_NAME"
          
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Print current branch
        run: |
          echo "Current branch: ${{ github.ref_name }}"
          echo "Branch created: ${{ steps.create_branch.outputs.branch_name }}"

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ${{ github.ref_name }}
          branch: ${{ steps.create_branch.outputs.branch_name }}
          title: "chore: bump version to ${{ steps.next_version.outputs.next_version }}"
          body: |
            ## Version Update
            
            This PR automatically updates the Maven version after merging changes to main.
            
            - **Current version**: ${{ steps.current_version.outputs.current_version }}
            - **New version**: ${{ steps.next_version.outputs.next_version }}
            
            This is an automated change generated by GitHub Actions.
          labels: |
            automated
            version-update
          draft: false
